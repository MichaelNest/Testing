https://git-scm.com/downloads ---  установка git

C:\Users\Testing>copy NUL .gitconfig --- создание файла .gitconfig
В Notepad++ делаем запись в файле .gitconfig:
[user]
	email=any_mail@gmail.com
	user=any_user
git config --list --global --- набераем это в командной строке и выведется запись из файла .gitconfig
D: --- перейти в диск D
dir --- посмотреть содержимое директории (windows)
cat file.txt --- посмотреть содержимое файла (linux)
echo 'Add line' >> text_doc.txt --- добавление надписи в документ (linux)
touch file name --- добавление надписи в документ (linux)

git clone https://github.com/MichaelNest/Testing.git --- сделать клонирование репозитория на комп
git status --- войдя в клонированый репозиторий (в папку) можно проверить его состояние
git add text_file1.txt --- указываем гиту что надо добавить новый файл или изменения в нем
git commit -m 'First commit' --- коммитим изменения
git commit -a -m 'Any commit' --- -а - значит для всех файлав
git reset HEAD~1 --- вернуться на один шаг назад после последнего коммита
git push -u origin main --- толкаем наши изменения в репозиторий гитхаб (первый раз точно надо так, через авторизацию)
git push --- толкаем наши изменения на гитхаб в последующие разы
git fetch --- посмотреть насколько локальная ветка main имеет одинаковость с веткой origin/main
	main --- ветка что на локальной машине
	origin/main --- локальная ветка, но для удаленного репозитория (говорит - что есть на удаленном origin репозитории, на момент запроса команды git fetch)
	origin main --- ветка что на удаленном репозитории
git pull --- загрузятся изменения с удаленного репозитория origin в локальную ветку main
git log --- посмотреть инфу о всех коммитах, от последнего вниз к первому q--выход из log
git log --author 'author_name' --- посмотреть коммиты конкретного автора
git show fe684f23f3507cb4e868dbf1849fa98c062baa75  --- посмотреть содержимое коммита по его id
git blame text_doc.txt --- посмотреть кто редактировал данный файл
git blame text_doc.txt | grep 123 --- посмотреть - кто проводил изменения '123' в файле 
git blame text_doc.txt | grep 'author_name' --- посмотреть - какие изменения проводил конкретный автор
git diff --- посмотреть все изменения по файлам

git reset HEAD~1 --- вернуться на один шаг назад после последнего коммита
git merge --abort --- при конфликте внешнего и локального репозитория можно отменить последнюю попытку соеденить репозитории
git checkout file_neme --- откатить последние изменения в указанном файле
git checkout . --- откатить последние изменения во всех файлах
git stash --- откатить изменения с возможностью вернуть их обратно, откат сохранится в буфере
git stash pop --- вернуть изменения из буфера stash
git stash clear --- очистить буфер stash

git branch branch_name --- создаем новую ветку
git branch --- посмотреть все имеющиеся ветки
git checkout branch_name --- переключится на указанную ветку
git push -u origin first_branch --- делаем коммит новой ветки н удаленный репозиторий




